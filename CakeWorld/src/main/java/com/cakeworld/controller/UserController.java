package com.cakeworld.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.cakeworld.main.UserRepository;
import com.cakeworld.model.Users;


@Controller    // This means that this class is a Controller
public class UserController {
	 // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	@Autowired
	private UserRepository userRepository;
	
	
	@RequestMapping(value = "/registerUser", method = RequestMethod.GET) 
    public Iterable<Users> getUser(Model model) {
		Iterable<Users> users = userRepository.findAll(); 
        return users;
    }
	@RequestMapping(value = "/registerUser", method = RequestMethod.POST) 
	    public String registerUser(@ModelAttribute("users")  Users users) {
		 	//System.out.println(users.getEmail().toString()); 
	        return "register";
	    }
	@RequestMapping("/add")// Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String name
			, @RequestParam String email) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		Users n = new Users();
		n.setName(name);
		n.setEmail(email);
		userRepository.save(n);
		return "Saved";
	}
	@RequestMapping("/mohit")
	public @ResponseBody String getMohit() {
		// This returns a JSON or XML with the users
		return "Mohit";
	}
	@RequestMapping("/all")
	public @ResponseBody Iterable<Users> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
}